<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux 命令]]></title>
    <url>%2F2017%2F05%2F18%2FLinux-shell%2F</url>
    <content type="text"><![CDATA[创建一个1G的文件1dd if=/dev/zero of=/root/1G.txt bs=1M count=1024 =================================================== 测试Linux下磁盘读写(1)使用hdparm命令1234# hdparm -Tt /dev/sda/dev/sda: Timing cached reads: 5440 MB in 2.01 seconds = 2712.59 MB/sec Timing buffered disk reads: 752 MB in 3.00 seconds = 250.66 MB/sec 可以看到,2.01秒钟读取了5440MB的缓存,约合2712.59 MB/sec;在3.00秒中读取了752 MB磁盘(物理读),读取速度约合250.66 MB/sec (2)使用dd命令这不是一个专业的测试工具，不过如果对于测试结果的要求不是很苛刻的话,平时可以使用来对磁盘的读写速度作一个简单的评估.另外由于这是一个免费软件,基本上UNIX系统上都有安装,对于Oracle裸设备的复制迁移,dd工具一般都是首选. 在使用前首先了解两个特殊设备/dev/null 伪设备,回收站.写该文件不会产生IO/dev/zero 伪设备,会产生空字符流,对它不会产生IO =================================================== centos7更改主机名1hostnamectl set-hostname zabbix-server =================================================== Linux系统的启动顺序(1)读取MBR的信息，启动Boot Manager(2)加载系统内核，启动init进程init进程是Linux的根进程，所有的系统进程都是它的子进程。(3)init进程读取“/etc/inittab”文件中的信息读取/etc/inittab文件信息，并进入预设的运行级别，按顺序运行该运行级别对应文件夹下的脚本。脚本通常以“start”参数启动，并指向一个系统中的程序。通常情况下，“/etc/rcS.d/”目录下的启动脚本首先被执行然后是“/etc/rcN.d/”目.例如您设定的运行级别为3,那么它对应的启动目录为“/etc/rc3.d/”,最后启动的脚本是/etc/rc.local目.(4)启动登录管理器，等待用户登录(5)在用户登录的时候执行sh脚本的顺序：每次登录的时候都会完全执行的 /etc/profile.d/file /etc/profile /etc/bashrc /root/.bashrc /root/.bash_profile =================================================== 服务器增加路由使192.168.10段的可以访问1$ sudo route add -net 192.168.10.0 netmask 255.255.255.0 gw 192.168.11.254 eth0 永久添加路由：1234$ sudo vim /etc/sysconfig/network-scripts/route-eth0192.168.10.0/24 via 192.168.11.254$ route -n =================================================== shell脚本中读取列cat a.txt1 a2 b 123456#!/bin/bashfile=a.txtwhile read i j;do echo $i = $jdone&lt;$file 结果显示：1 = a2 = b =================================================== crontab每10s执行一次1234567# crontab -e* * * * * /bin/date &gt;&gt;/tmp/date.txt* * * * * sleep 10; /bin/date &gt;&gt;/tmp/date.txt* * * * * sleep 20; /bin/date &gt;&gt;/tmp/date.txt* * * * * sleep 30; /bin/date &gt;&gt;/tmp/date.txt* * * * * sleep 40; /bin/date &gt;&gt;/tmp/date.txt* * * * * sleep 50; /bin/date &gt;&gt;/tmp/date.txt =================================================== 判断变量是否为空12345678#!/bin/sh#filename: a.sh para1=a if [ ! -n "$para1" ]; then echo "IS NULL" else echo "NOT NULL" fi =================================================== 更改linux的时间格式由于在做实验的时候需要每个节点的时间都需要是一样的，但是因为有些节点的时间为EDT的时间，而有些节点的时间是CST格式的时间。所以为了实现EDT转换成CST时间的命令如下：12mv /etc/localtime /etc/localtime.bakln -s /usr/share/zoneinfo/Asia/Shanghai /etc/locaktime 使用上面的两条命令就可以实现从EDT时间变成CST的时间。 实现系统时间与网络时间的同步安装ntpdate工具1sudo apt-get install ntpdate 设置系统时间与网络时间同步1ntpdate cn.pool.ntp.org 将系统时间写入硬件时间1hwclock --systohc 以上步骤就可以实现了系统时间与网络时间的同步 123mv /etc/localtime /etc/localtime.bakln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtimentpdate 0.cn.pool.ntp.org =================================================== shell for循环1234567dirs=(/c/* /b/* /a/*) for d in $&#123;dirs[@]&#125;;do sudo rm -rf $d echo $d done done =================================================== shell 删除大量小文件测试时有时候小文件过多时，直接用rm -rf *无法删除，可采用如下命令：其中/tmp/empty/ 为实现创建好的空文件夹 1sudo rsync --delete-before -d /tmp/empty/ /mnt/a/ =================================================== shell sed详解1234567891011121314151617if test -f won-raw.txt; then echo using existing won-raw.txtelse curl http://www.gutenberg.org/cache/epub/3300/pg3300.txt | sed 's/\r//' | sed 's/^ *//;s/ *$//' | grep -v ' ' | sed 's/ */ /g' &gt; won-raw.txt sed 5q won-raw.txtfi\r是回车，\n是换行。sed 's/\r//' 去掉回车sed 's/^ *//;s/ *$//' 去掉前后的空格grep -v ' ' 排除不包含的sed 's/ */ /g' 把所有两个或多于两个空格替换为一个空格sed 5q 是打印前５行退出sed =================================================== shell 批量重命名0001 0002 000312345678910Imagedir=/home/lisn/scripts/opencv/png-all-960i=0for file_name in $&#123;Imagedir&#125;/*.png; do temp_file=`basename $file_name` i=$(($i+1)) cd $Imagedir mv $file_name `printf "%04d\n" $i`.pngdone =================================================== 后台运行脚本两种后台运行方式： command &amp; ： 后台运行，你关掉终端会停止运行 nohup command &amp; ： 后台运行，你关掉终端也会继续运行将程序调度到后台执行bg %1使用jobs可以查看后台执行的程序把程序调回到前台fg %1 &amp; 将指令丢到后台中去执行[ctrl]+z ??????台任务??????后台中暂停jobs 查看后台的工作状态fg %jobnumber 将后台的任务拿到前台来处理bg %jobnumber 将任务放到后台中去处理kill 管理后台的任务 (1)&amp;在linux中使用&amp;，实际上是将命令放入到一个作业队列中。如果放入后台依然会产生输出到屏幕，可以用command &gt;out.file 2&gt;&amp;1 &amp;2&gt;&amp;1表示所有的标准输出和错误输出都将被重定向到一个叫做out.file 的文件中.但是如上方到后台执行的进程，其父进程还是当前终端shell的进程，而一旦父进程退出，则会发送hangup信号给所有子进程，子进程收到hangup以后也会退出。如果我们要在退出shell的时候继续运行进程，则需要使用nohup忽略hangup信号，或者setsid将父进程设为init进程(进程号为1)使用nohup/setsid加上&amp;使进程在后台运行，同时不受当前shell退出的影响。 查看当前父进程echo $$ 对于已经在后台执行的进程解决办法$ jobs -l$ disown -h %1 还可以使用下面的方法$ (./test.sh &amp;) =================================================== 更改linux用户名usermod -l NewUser -d /home/NewUser -m OldUser =================================================== liunx打印秒数echo date +%s =================================================== vi中替换:%s///g =================================================== netstat 查看端口运行的程序是什么netstat -anp | grep xxxx]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows问题集]]></title>
    <url>%2F2017%2F05%2F18%2FWindows%2F</url>
    <content type="text"><![CDATA[快速清理DNS缓存有时候更改了域名对应的IP地址，但是绑定的还是原来的IP地址，这时需要清理缓存。方法:在cmd中输入：1ipconfig/flushdns &lt;--按回车键 已成功刷新DNS解析缓存]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux问题集]]></title>
    <url>%2F2017%2F05%2F18%2FLinux%2F</url>
    <content type="text"><![CDATA[删除乱码文件通过i节点号删除文件12$ ls -i$ find . -inum 32983551 -exec rm &#123;&#125; \; =================================================== 杀死僵尸进程用top查看系统中的僵尸进程情况看这些僵尸是什么程序1ps -A -o stat,ppid,pid,cmd | grep -e '^[Zz]' kill 僵尸进程1ps -A -o stat,ppid,pid,cmd | grep -e '^[Zz]' | awk '&#123;print $2&#125;' | xargs kill -9 再次查看!! =================================================== vim 无反应解决方法：1234yum remove -y gpm*yum remove -y vim*yum install -y gpm*yum install -y vim* =================================================== linux更新某一个软件包1yum update python =================================================== 关闭ubuntu的防火墙1ufw disable =================================================== 磁盘无法umount问题：1234# umount /mnt/hdf/umount: /mnt/hdf: target is busy. (In some cases useful info about processes that use the device is found by lsof(8) or fuser(1)) 解决方法：1234# fuser -km /mnt/hdf//mnt/hdf: 43589c # umount /mnt/hdf/# df -hl =================================================== 无法切换用户问题：123# su - testusersu: cannot set user id: Resource temporarily unavailable无法设置用户标识：资源暂时不可用 默认的用户进程数量为1024。 原来的进程数：1234567891011121314151617# ulimit -acore file size (blocks, -c) 0data seg size (kbytes, -d) unlimitedscheduling priority (-e) 0file size (blocks, -f) unlimitedpending signals (-i) 1031709max locked memory (kbytes, -l) 64max memory size (kbytes, -m) unlimitedopen files (-n) 1024 &lt;--- 看这里pipe size (512 bytes, -p) 8POSIX message queues (bytes, -q) 819200real-time priority (-r) 0stack size (kbytes, -s) 10240cpu time (seconds, -t) unlimitedmax user processes (-u) 1031709virtual memory (kbytes, -v) unlimitedfile locks (-x) unlimited 解决方法：123456# vim /etc/profileulimit -S -c 0 &gt; /dev/null 2&gt;&amp;1ulimit -HSn 65000ulimit -u 65000注意：-u参数为最大进程数# source /etc/profile 12345# vim /etc/security/limits.conf testuser soft nproc 65535testuser hard nproc 65535* soft nofile 65535* hard nofile 65535 注： limits.conf文件实际上就是ulimit命令的配置文件。 nproc为打开的最大进程数，nofile为打开的最大文件数。 该处和上面的 /etc/profile是重复设置的。实现上该处增加了以后，/etc/profile就不用再做配置的，而且该处配置更规范些，可以对用户进行限制。 即然以上两处都做了设置，还是有上面的提示，神奇了!!! 后来又乱折腾了半天，突然想到之前在centos 6.3版本配置的时候，发现centos 6.X以后新增了一个/etc/security/limits.d/90-nproc.conf 文件，用于控制nproc。 这里面的默认配置是12* soft nproc 1024root soft nproc unlimited 123# vim /etc/security/limits.d/90-nproc.conf* soft nproc 65535root soft nproc unlimited =================================================== crontab不生效问题描述：11 11 28 5 * 定时5月28日11点1分执行，但是不执行。但是如果写为11 * 28 5 * 则执行。 产生原因：crontab的时间使用格式和系统的时间不同导致。 解决方法：重启crontab.第一次遇到这么奇葩的问题，还是基础没有掌握啊。 =================================================== linux下的使用windows虚拟机VirtualBox虚拟机后台运行，使用headless模式。 启动虚拟机（win-2012为虚拟机名）1vboxmanage startvm win-2012 --type headless 关闭虚拟机（win-2012为虚拟机名）1vboxmanage controlvm win-2012 poweroff =================================================== Linux清理缓存通过下面的方法即可清空buff/cache1echo 3 &gt; /proc/sys/vm/drop_caches =================================================== scp无法传输文件问题：123$ scp ~/.ssh/config tnode2:/home/ceph/.ssh/config Bad owner or permissions on /home/ceph/.ssh/configlost connection 解决方法：1$ sudo chmod 600 /home/ceph/.ssh/config =================================================== 使用tar无法解压问题1：1234567# tar xvf mailx-12.4.tar.bz2 tar (child): cannot run bzip2: No such file or directorytar (child): trying lbzip2tar (child): lbzip2: Cannot exec: No such file or directorytar (child): Error is not recoverable: exiting nowtar: Child returned status 2tar: Error is not recoverable: exiting now 解决方法：1# yum install -y bzip2 问题2：1234tar (child): xz: Cannot exec: No such file or directorytar (child): Error is not recoverable: exiting nowtar: Child returned status 2tar: Error is not recoverable: exiting now 解决方法：1yum install xz -y]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[test]]></title>
    <url>%2F2017%2F05%2F17%2Ftest%2F</url>
    <content type="text"><![CDATA[1 2 3 4 5 6 O O O O O O]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo,搭建属于自己的博客]]></title>
    <url>%2F2017%2F05%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建Samba服务器]]></title>
    <url>%2F2017%2F03%2F13%2Fsamba%2F</url>
    <content type="text"><![CDATA[目录：一、samba的安装二、可以匿名用户登录三、认证用户登录四、用户帐号的映射五、客户端访问控制六、隐藏共享七、问题集 一、samba的安装12345678yum list|grep samba4yum install samba4* -y启动： /etc/init.d/smb restart /etc/init.d/nmb restart设置自动启动：chkconfig smb onchkconfig nmb on 二、可以匿名用户登录12345678910111213 vim /etc/samba/smb.conf[global]security = share[public]comment= publicpath = /publicpublic = yeswritable = yesmkdir publicchmod 777 public/etc/init.d/smb restart/etc/init.d/nmb restart 测试：123456smbclient //10.10.54.81/public\\10.10.54.81\public --window在计算机网络地址栏输入Ubuntusmb://10.10.54.81/public --linux 三、认证用户登录(1)创建samba用户123456789 groupadd public useradd nan -g public --创建系统用户 id nan --查看用户信息 uid=509(nan) gid=509(public) groups=509(public) pdbedit -a -u nan --创建samba用户 pdbedit -L --查看创建的samba用户 nan:509:-u 用户名 -a 创建 //修改密码1smbpasswd nan //删除12345678 pdbedit -x lisn``` //查看samba进程链接``` bashsmbstatus [-pS] [-u username] smbstatus -u public //测试配置文件12345678 testparm /etc/samba/smb.confLoad smb config files from /etc/samba/smb.confrlimit_max: increasing rlimit_max (1024) to minimum Windows limit (16384)Processing section "[public]"WARNING: The security=share option is deprecatedLoaded services file OK.Server role: ROLE_STANDALONEPress enter to see a dump of your service definitions (2)修改配置文件123456789101112131415161718192021222324vim /etc/samba/smb.conf[global]security = userconfig file=/etc/samba/smb.conf.%U[public]comment= publicpath = /publicwrite list= publicwritable = yesbrowseable=yes --设置显示共享文件夹,默认显示 chgrp public /public或者chown root.public /public chmod 755 /public/重启： /etc/init.d/smb restart /etc/init.d/nmb restart测试:smbclient //10.10.54.81/public -U public 四、用户帐号的映射帐号映射配置：12 vim /etc/samba/smbusersnan = aa bb 12345678910配置文件: vim /etc/samba/smb.conf[global]username map=/etc/samba/smbusers --帐号映射[public]comment= publicpath = /publicwritable = yesbrowseable = yes 重启12/etc/init.d/smb restart/etc/init.d/nmb restart 测试：使用帐号aa/bb登录 五、客户端访问控制hosts allow:只允许配置的IP地址/端可以访问samba服务端hosts deny:只拒绝配置的IP地址/端可以访问samba服务端 [global]security = userhosts deny =10.10.54.80 –只禁止10.10.54.80访问hosts allow =10.10.54.80 –只允许10.10.54.80访问[public]comment= publicpath = /publicpublic = yeswrite list=+nan,@public –允许nan用户，public组写入权限 测试：当hosts deny =10.10.54.80，10.10.54.80不能访问当hosts allow =10.10.54.80，只有10.10.54.80能访问 六、隐藏共享需求：/security目录值可以boss用户浏览和登录，/pub目录只可以@yanfa,boss可以访问和浏览 (1)创建用户 useradd boss groupadd yanfa useradd lsn -g yanfa pdbedit -a -u boss (2)修改配置文件需要针对boss用户单独创建配置文件smb.conf.boss cp smb.conf smb.conf.boss vim /etc/samba/smb.conf[global]security = userconfig file = /etc/samba/smb.conf.%U[public]comment= yanfa accesspath = /publicwrite list= @yanfa,boss vim /etc/samba/smb.conf.boss[global]security = user[public]comment= yanfa accesspath = /publicwrite list= @yanfa,boss[security]comment = only boss accesspath = /securitywritable = yes /etc/init.d/nmb restart /etc/init.d/smb restart 测试：smbclient -L 10.10.54.226 -U boss –boss用户smbclient -L 10.10.54.226 -U wenl –研发组人 挂载mount -t cifs //10.10.54.81/softs /mnt/ 设置自动挂载： cat /etc/fstab//192.168.27.233/public /mnt/data/ cifs defaults,username=XXXX,password=XXXX 0 0 setsebool -P samba_export_all_rw on 六、问题集1.不知道什么原因导致samba的nmbnmb状态显示：dead but pid file exists 根据网上!ps -efww|grep smbd|grep -v grep|cut -c 9-15|xargs kill没用!!!! 解决方法：卸载samba更换为samba4再重新配置，OK!!!]]></content>
      <categories>
        <category>Linux服务</category>
      </categories>
      <tags>
        <tag>Linux Server</tag>
      </tags>
  </entry>
</search>